
WITH URR AS (
	SELECT DISTINCT
	urr.SALESFORCE_ID
	,urr.MARKETPLACE_ID
	,NVL(CASE WHEN urr.SF_ACCOUNT_TYPE NOT IN ('Field Account') THEN 'EAS' ELSE 
	(CASE WHEN l.LEGACY_SALES_VERTICAL NOT IN ('Automotive','Consumer Packaged Goods','Entertainment','Financial Services','Hardlines','Non-Endemic','Softlines','Telco','Devices') THEN 'Other' 
	WHEN urr.SUB_VERTICAL in ('Quick Service Restaurants (QSR)','Travel','QSR') THEN 'Devices' ELSE l.LEGACY_SALES_VERTICAL END) 
	END,'Other') AS SALES_VERTICAL
	,CASE WHEN UPPER(NVL(CASE WHEN urr.SF_ACCOUNT_TYPE NOT IN ('Field Account') THEN 'EAS' ELSE 
	(CASE WHEN l.LEGACY_SALES_VERTICAL NOT IN ('Automotive','Consumer Packaged Goods','Entertainment','Financial Services','Hardlines','Non-Endemic','Softlines','Telco','Devices') THEN 'Other' 
	WHEN urr.SUB_VERTICAL in ('Quick Service Restaurants (QSR)','Travel','QSR') THEN 'Devices' ELSE l.LEGACY_SALES_VERTICAL END) 
	END,'Other')) IN ('ENTERTAINMENT') 
	THEN NVL(CASE WHEN urr.SUB_VERTICAL in ('Quick Service Restaurants (QSR)','Travel','QSR') THEN 'Devices' ELSE l.legacy_sales_vertical END,'Other') || '-' || 
	(CASE WHEN urr.sf_account_type = 'Field Account' THEN CASE
	WHEN urr.SALES_VERTICAL = 'Entertainment' AND urr.SUB_VERTICAL = 'TV' THEN 'TV/Streaming ex PVC'
	WHEN urr.SALES_VERTICAL = 'Entertainment' AND urr.SUB_VERTICAL = 'TV/OTT' THEN 'TV/Streaming ex PVC'
	WHEN urr.SALES_VERTICAL = 'Media' AND urr.SUB_VERTICAL = 'Apps' THEN 'TV/Streaming ex PVC'
	WHEN urr.SALES_VERTICAL = 'Entertainment' AND urr.SUB_VERTICAL = 'Theatrical' THEN 'Theatrical' ELSE NULL END ELSE NULL END) 
	ELSE NULL END AS SUBVERTICAL
	,ott.OTT_CHANNEL_FLAG AS APPS_OTT_CHANNELS_FLAG

	FROM VAP_AGG.D_URR_STACKED_PRODUCT_SNAPSHOT urr
	LEFT JOIN VAP_AGG.OTT_SALESFORCE_ADVERTISER_MAP ott
	ON COALESCE(urr.PROPOSAL_ID::varchar(25),urr.ORDER_ID::varchar(25)) = ott.PROPOSAL_ORDER_ID
	AND urr.REPORT_YEAR = ott.REPORT_YEAR
	AND urr.MARKETPLACE_ID = ott.MARKETPLACE_ID
	LEFT JOIN VAP_AGG.LEGACY_SALES_VERTICAL l ON urr.SF_ACCOUNT_ID = l.SF_ACCOUNT_ID

	WHERE  
	(urr.SIGNED_FLAG IS NULL OR SIGNED_FLAG = 'Include-SignedRevenue') 
	AND urr.REPORT_YEAR IN (DATE_PART(y,TO_DATE('{RUN_DATE_YYYYMMDD}','YYYYMMDD'))
	,DATE_PART(y,DATEADD(y,-1,TO_DATE('{RUN_DATE_YYYYMMDD}','YYYYMMDD')))
	,DATE_PART(y,DATEADD(y,-2,TO_DATE('{RUN_DATE_YYYYMMDD}','YYYYMMDD')))
	,DATE_PART(y,DATEADD(y,-3,TO_DATE('{RUN_DATE_YYYYMMDD}','YYYYMMDD')))
	,DATE_PART(y,DATEADD(y,-4,TO_DATE('{RUN_DATE_YYYYMMDD}','YYYYMMDD')))
	,DATE_PART(y,DATEADD(y,-5,TO_DATE('{RUN_DATE_YYYYMMDD}','YYYYMMDD'))))
	AND (PROBABILITY IS NULL OR (PROBABILITY >= 25 AND PROBABILITY != 100)) --matching main URR query
	AND NVL(PROPERTY_ROLLUP, 'Include') <> 'Exclude' 
	AND UPPER(urr.DATA_SOURCE) <> 'DSP-SS-BOOKED'
	AND urr.SNAPSHOT_DATE BETWEEN TO_DATE('{RUN_DATE_YYYYMMDD}','YYYYMMDD')-7 AND TO_DATE('{RUN_DATE_YYYYMMDD}','YYYYMMDD')
)	


SELECT 
t.ADVERTISER_COUNTRY
,urr.APPS_OTT_CHANNELS_FLAG
,urr.SALES_VERTICAL
,urr.SUBVERTICAL
,t.DIM_ADVERTISER_ID
,t.ADVERTISER_NAME
,t.CAMPAIGN_CFID
,t.CAMPAIGN_NAME
,t.CAMP_START
,t.CAMP_END
,t.AD_CFID
,t.DIM_AD_ID
,t.AD_NAME
,t.AD_START
,t.AD_END
,t.BUDGET_AMOUNT
,t.PROPERTY_TYPE
,CASE WHEN t.DIM_DATE <= TO_DATE('20191124','YYYYMMDD')  THEN 'Pre'
ELSE 'Post' END AS OPTIMIZATION_TIMEFRAME
,CAST(DATEDIFF(DAY,t.AD_START,t.AD_END) AS DECIMAL) AS TOTAL_DAY_COUNT
,CAST(DATEDIFF(DAY,t.AD_START,TO_DATE('20191124','YYYYMMDD')) AS DECIMAL) AS PRE_DAY_COUNT
,CAST(DATEDIFF(DAY,TO_DATE('20191124','YYYYMMDD'),t.AD_END) AS DECIMAL) AS POST_DAY_COUNT
,SUM(t.IMPRESSIONS) AS IMPRESSIONS
,SUM(t.CLICKS) AS CLICKS
,SUM(t.REVENUE)/100 AS REVENUE
,0 AS CONVERSIONS
,0 AS VIDEO_STARTED
,0 AS VIDEO_COMPLETED

FROM VAP_AGG.ENDAL_PERFORMANCE_TRAFFIC t
LEFT JOIN URR urr ON t.SALESFORCE_ID = urr.SALESFORCE_ID

GROUP BY 
t.ADVERTISER_COUNTRY
,urr.APPS_OTT_CHANNELS_FLAG
,urr.SALES_VERTICAL
,urr.SUBVERTICAL
,t.DIM_ADVERTISER_ID
,t.ADVERTISER_NAME
,t.CAMPAIGN_CFID
,t.CAMPAIGN_NAME
,t.CAMP_START
,t.CAMP_END
,t.AD_CFID
,t.DIM_AD_ID
,t.AD_NAME
,t.AD_START
,t.AD_END
,t.BUDGET_AMOUNT
,t.PROPERTY_TYPE
,CASE WHEN t.DIM_DATE <= TO_DATE('20191124','YYYYMMDD')  THEN 'Pre'
ELSE 'Post' END
,CAST(DATEDIFF(DAY,t.AD_START,t.AD_END) AS DECIMAL)
,CAST(DATEDIFF(DAY,t.AD_START,TO_DATE('20191124','YYYYMMDD')) AS DECIMAL)
,CAST(DATEDIFF(DAY,TO_DATE('20191124','YYYYMMDD'),t.AD_END) AS DECIMAL)

UNION ALL


SELECT 
t.ADVERTISER_COUNTRY
,urr.APPS_OTT_CHANNELS_FLAG
,urr.SALES_VERTICAL
,urr.SUBVERTICAL
,t.DIM_ADVERTISER_ID
,t.ADVERTISER_NAME
,t.CAMPAIGN_CFID
,t.CAMPAIGN_NAME
,t.CAMP_START
,t.CAMP_END
,t.AD_CFID
,t.DIM_AD_ID
,t.AD_NAME
,t.AD_START
,t.AD_END
,t.BUDGET_AMOUNT
,t.PROPERTY_TYPE
,CASE WHEN t.DIM_DATE <= TO_DATE('20191124','YYYYMMDD') THEN 'Pre'
ELSE 'Post' END AS OPTIMIZATION_TIMEFRAME
,CAST(DATEDIFF(DAY,t.AD_START,t.AD_END) AS DECIMAL) AS TOTAL_DAY_COUNT
,CAST(DATEDIFF(DAY,t.AD_START,TO_DATE('20191124','YYYYMMDD')) AS DECIMAL) AS PRE_DAY_COUNT
,CAST(DATEDIFF(DAY,TO_DATE('20191124','YYYYMMDD'),t.AD_END) AS DECIMAL) AS POST_DAY_COUNT
,0 AS IMPRESSIONS
,0 AS CLICKS
,0 AS REVENUE
,SUM(t.CONVERSIONS) AS CONVERSIONS
,SUM(t.VIDEO_STARTED) AS VIDEO_STARTED
,SUM(t.VIDEO_COMPLETED) AS VIDEO_COMPLETED

FROM VAP_AGG.ENDAL_PERFORMANCE_CONVERSION t
LEFT JOIN URR urr ON t.SALESFORCE_ID = urr.SALESFORCE_ID

GROUP BY 
t.ADVERTISER_COUNTRY
,urr.APPS_OTT_CHANNELS_FLAG
,urr.SALES_VERTICAL
,urr.SUBVERTICAL
,t.DIM_ADVERTISER_ID
,t.ADVERTISER_NAME
,t.CAMPAIGN_CFID
,t.CAMPAIGN_NAME
,t.CAMP_START
,t.CAMP_END
,t.AD_CFID
,t.DIM_AD_ID
,t.AD_NAME
,t.AD_START
,t.AD_END
,t.BUDGET_AMOUNT
,t.PROPERTY_TYPE
,CASE WHEN t.DIM_DATE <= TO_DATE('20191124','YYYYMMDD') THEN 'Pre'
ELSE 'Post' END
,CAST(DATEDIFF(DAY,t.AD_START,t.AD_END) AS DECIMAL)
,CAST(DATEDIFF(DAY,t.AD_START,TO_DATE('20191124','YYYYMMDD')) AS DECIMAL)
,CAST(DATEDIFF(DAY,TO_DATE('20191124','YYYYMMDD'),t.AD_END) AS DECIMAL)
LIMIT 100;
